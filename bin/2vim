#!/usr/bin/env bash
# 2vim
#
# Maintainer:   Beomjoon Goh
# Last Change:  13 Feb 2020 18:51:33 +0900

set -o nounset -o pipefail -o errexit

script="$(basename "$0")"

function usage() {
  cat <<-HELP
	${script} - send JSON to parent process vim.
	
	Usage: ${script} <command> [arguments]
	
	Commands:
	  cd [path]   Change current working directory of vim and terminal to [path].
	  help        Print this help message
	  make        Invoke make and open QuickFix window.  Note that it's
	              synchronous process.
	  set         Set 'g:term_bufnr' to the current terminal buffer number.
	              'g:term_bufnr' is used for terminal-to-job api (term_sendkeys()).
	  vs [file]   Open [file] with vertical split.  If no [file] is given, empty
	              buffer is opened.
	
	See 'vimrc' for specific implementations and key mappings.  For general
	information, see ':help terminal' in vim.
HELP
}

function change_directory() {
  path="$(realpath "${1:-$PWD}")"
  do_cd=1
  [ "${path}" = "$PWD" ] && do_cd=0
  echo "Set pwd of vim to: ${path}"
  send call ChangeDirectory "${path}" ${do_cd}
}

function vertical_split() {
  if [ $# -eq 0 ]; then
    send call VerticalSplit new
  else
    send call VerticalSplit "$(realpath "$1")"
  fi
}

function make() {
  change_directory
  send call Make "$@"
}

function send() {
  if [ $# -lt 2 ]; then
    >&2 echo "call: Not enough arguments"
    exit 1
  fi
  cmd="$1"
  name="$2"
  arguments="${@:3}"
  args=""
  case "${cmd}" in
    call)
      name="Tapi_${name}"
      args="["
      for a in ${arguments[@]}; do
        args+="\"${a}\", "
      done
      args+="]"
      ;;
    drop)
      name="$(realpath "${name}")"
      args="{${arguments[@]}}"
      ;;
    *)
      exit 1
      ;;
  esac

  printf ']51;["%s", "%s", %s]' "${cmd}" "${name}" "${args}"
}

# main
function 2vim() {
  if [ -z ${VIM_TERMINAL:+NotInVim} ]; then
    >&2 echo "${script}: You are not in vim."
    exit 1
  fi
  if [ $# -lt 1 ]; then
    >&2 echo "${script}: Need a command."
  fi

  case "$1" in
    "cd") change_directory "${@:2}" ;;
    "help") usage ;;
    "make") make "${@:2}" ;;
    "set") send call SetTermBufferNumber ;;
    "vs") vertical_split "${@:2}" ;;
    *) 
      >&2 echo "${script}: Not a command."
      exit 1 ;;
  esac
}

2vim "$@"
