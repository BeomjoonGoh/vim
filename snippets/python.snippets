# python.snippets

# Header
snippet #! | Shebang
	#!/usr/bin/env ${1:python}${0}
snippet imp | import A
	import ${1:module}${0}
snippet from | from A import B
	from ${1} import ${0}
snippet Imp | Imports common
	import numpy
	import sys, os, re, shutil, glob
	from math import *
	from subprocess import Popen, PIPE
	${0}

# Class
snippet cl | class A(B): def __init__(self):
	class ${1}(${2}):
		def __init__(self,${3}):
			${5:super($1, self).__init__()}${0}
snippet . | self.
	self.${0}
snippet _ | __A__
	__${1}__${0}

# Function
snippet ifmain | if __name__ == '__main__':
	if __name__ == '__main__':
		${1:main()}
snippet def | def A(B):
	def ${1}(${2:`indent('.') ? 'self' : ''`}):${0}
snippet ld | A = lambda B : C
	${1} = lambda ${2} : ${0}
snippet re | return A
	return${0}

# Condition
snippet if | if A:
	if ${1}:${0}
snippet ei | else if A:
	else if ${1}:${0}
snippet el | else:
	else:${0}
snippet t | A if B else C
	${1} if ${2} else ${3}

# Loop
snippet wh | while A:
	while ${1:condition}:${2}
snippet for | for A in B:
	for ${1} in ${2}:${0}

# Exception
snippet try | try: A except B,C: D
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}

# Others
snippet doc | """A"""
	"""${1}"""${0}
snippet with | with open(A,'B') as C:
	with open(${1}, '${2:r}') as ${3:f}:${0}
