# sh.snippets

# Header
snippet #! | Shebang
	#!/usr/bin/env ${1:bash}
	# ${2:`expand('%:t')`}
	#
	# Maintainer:   ${3:`g:snips_author`}
	# Last Change:  ${4:`strftime('%d %b %Y %T %z')`}

	script="\$(basename "\$\0")"${0}
snippet sets | set -eu -o pipefail
	set -o errexit -o nounset -o pipefail${0}

# Function
snippet fun | function A() { B }
	function ${1}() {${0}
	}
snippet usage | usage() { cat << A }
	function usage() {
		cat <<-HELP
	${1}
	HELP
	}
snippet args | getopts
	for arg in "\$@"; do
		shift
		case "\${arg}" in
		  "--${1}")  set -- "\$@" "-${2}" ;;
		  "--help")  set -- "\$@" "-h" ;;
		  "--"*)     set -- "\$@" "-?" ;;
		  *)         set -- "\$@" "\${arg}" ;;
		esac
	done
	OPTIND=1
	while getopts "$2${4}h" opt; do
	  case "\${opt}" in
	    "$2") ${0} ;;
	    "h") usage; exit 0 ;;
	    "?") usage >&2; exit 1 ;;
	  esac
	done
	shift \$((OPTIND - 1))

# Condition
snippet if | if [ A ]; then B fi
	if [ ${1} ]; then${0}
	fi
snippet ei | elif [ A ]; then
	elif [ ${1} ]; then${0}
snippet el | else
	else${0}
snippet t | [ A ] && B || C
	[ ${1} ] && ${2} || ${0}
snippet ca | case A in B) C;; esac
	case ${1} in
		${2:pat})
			${0};;
	esac
snippet de | *)
	*)
		${0};;

# Loop
snippet for | for A in B; do C done
	for ${1} in ${2}; do${0}
	done
snippet forc | for (( A=B; A<C; A++)); do D done
	for (( ${1:i} = ${2:0}; $1 < ${3:imax}; $1++ )); do${0}
	done
snippet wh | while [ A ]; do B done
	while [ ${1} ]; do${0}
	done
snippet un | until [ A ]; do B done
	until [ ${1} ]; do${0}
	done

# Others
snippet alias | alias A="B"
	alias ${1}="${2}"${0}
snippet $ | "${A}"
	"\${${1}}"${0}
snippet $( | "$(A)"
	"\$(${1})"${0}
snippet $: | "${A:B}"
	"\${${1}:${2:-}}"${0}
snippet err | >&2 echo
	>&2 echo ${0}
